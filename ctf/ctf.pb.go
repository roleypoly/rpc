// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ctf/ctf.proto

package ctf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Flags struct {
	Flags                []*Flag  `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flags) Reset()         { *m = Flags{} }
func (m *Flags) String() string { return proto.CompactTextString(m) }
func (*Flags) ProtoMessage()    {}
func (*Flags) Descriptor() ([]byte, []int) {
	return fileDescriptor_6327d78a13af617a, []int{0}
}

func (m *Flags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flags.Unmarshal(m, b)
}
func (m *Flags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flags.Marshal(b, m, deterministic)
}
func (m *Flags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flags.Merge(m, src)
}
func (m *Flags) XXX_Size() int {
	return xxx_messageInfo_Flags.Size(m)
}
func (m *Flags) XXX_DiscardUnknown() {
	xxx_messageInfo_Flags.DiscardUnknown(m)
}

var xxx_messageInfo_Flags proto.InternalMessageInfo

func (m *Flags) GetFlags() []*Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type Flag struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ring                 int32    `protobuf:"varint,2,opt,name=ring,proto3" json:"ring,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flag) Reset()         { *m = Flag{} }
func (m *Flag) String() string { return proto.CompactTextString(m) }
func (*Flag) ProtoMessage()    {}
func (*Flag) Descriptor() ([]byte, []int) {
	return fileDescriptor_6327d78a13af617a, []int{1}
}

func (m *Flag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flag.Unmarshal(m, b)
}
func (m *Flag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flag.Marshal(b, m, deterministic)
}
func (m *Flag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flag.Merge(m, src)
}
func (m *Flag) XXX_Size() int {
	return xxx_messageInfo_Flag.Size(m)
}
func (m *Flag) XXX_DiscardUnknown() {
	xxx_messageInfo_Flag.DiscardUnknown(m)
}

var xxx_messageInfo_Flag proto.InternalMessageInfo

func (m *Flag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Flag) GetRing() int32 {
	if m != nil {
		return m.Ring
	}
	return 0
}

type Ring struct {
	Ring                 int32    `protobuf:"varint,1,opt,name=ring,proto3" json:"ring,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ring) Reset()         { *m = Ring{} }
func (m *Ring) String() string { return proto.CompactTextString(m) }
func (*Ring) ProtoMessage()    {}
func (*Ring) Descriptor() ([]byte, []int) {
	return fileDescriptor_6327d78a13af617a, []int{2}
}

func (m *Ring) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ring.Unmarshal(m, b)
}
func (m *Ring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ring.Marshal(b, m, deterministic)
}
func (m *Ring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ring.Merge(m, src)
}
func (m *Ring) XXX_Size() int {
	return xxx_messageInfo_Ring.Size(m)
}
func (m *Ring) XXX_DiscardUnknown() {
	xxx_messageInfo_Ring.DiscardUnknown(m)
}

var xxx_messageInfo_Ring proto.InternalMessageInfo

func (m *Ring) GetRing() int32 {
	if m != nil {
		return m.Ring
	}
	return 0
}

func init() {
	proto.RegisterType((*Flags)(nil), "roleypoly.ctf.Flags")
	proto.RegisterType((*Flag)(nil), "roleypoly.ctf.Flag")
	proto.RegisterType((*Ring)(nil), "roleypoly.ctf.Ring")
}

func init() { proto.RegisterFile("ctf/ctf.proto", fileDescriptor_6327d78a13af617a) }

var fileDescriptor_6327d78a13af617a = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0x3f, 0x4b, 0xc4, 0x30,
	0x1c, 0x6d, 0xbc, 0x56, 0xf0, 0x77, 0xde, 0x12, 0x45, 0x4a, 0x15, 0x29, 0x99, 0xea, 0x92, 0x42,
	0x5d, 0x94, 0xdb, 0x3c, 0x3c, 0x57, 0x29, 0x4e, 0x6e, 0x6d, 0x49, 0x62, 0xa1, 0xe9, 0xaf, 0xe4,
	0x72, 0x42, 0xbf, 0xb7, 0x1f, 0x40, 0x92, 0xe2, 0x89, 0x52, 0x1c, 0xdc, 0x5e, 0xde, 0x9f, 0xe4,
	0xf1, 0x02, 0xab, 0xc6, 0xca, 0xbc, 0xb1, 0x92, 0x0f, 0x06, 0x2d, 0xd2, 0x95, 0xc1, 0x4e, 0x8c,
	0x03, 0x76, 0x23, 0x6f, 0xac, 0x4c, 0x2e, 0x15, 0xa2, 0xea, 0x44, 0xee, 0xc5, 0x7a, 0x2f, 0x73,
	0xa1, 0x07, 0x3b, 0x4e, 0x5e, 0x56, 0x40, 0xb4, 0xed, 0x2a, 0xb5, 0xa3, 0x37, 0x10, 0x49, 0x07,
	0x62, 0x92, 0x2e, 0xb2, 0x65, 0x71, 0xc6, 0x7f, 0x5c, 0xc2, 0x9d, 0xa9, 0x9c, 0x1c, 0x8c, 0x43,
	0xe8, 0x8e, 0x94, 0x42, 0xd8, 0x57, 0x5a, 0xc4, 0x24, 0x25, 0xd9, 0x49, 0xe9, 0xb1, 0xe3, 0x4c,
	0xdb, 0xab, 0xf8, 0x28, 0x25, 0x59, 0x54, 0x7a, 0xcc, 0x12, 0x08, 0xcb, 0xb6, 0x57, 0x07, 0x8d,
	0x7c, 0x6b, 0xc5, 0x07, 0x81, 0xc5, 0xe6, 0x65, 0x4b, 0xd7, 0x70, 0xfa, 0x24, 0xac, 0xb3, 0x4d,
	0x75, 0x7e, 0xbf, 0xef, 0x94, 0xe4, 0x7c, 0xa6, 0xd4, 0x8e, 0x05, 0xf4, 0x0e, 0x60, 0x63, 0x44,
	0x65, 0x85, 0xaf, 0x35, 0x57, 0x3d, 0x99, 0x23, 0x59, 0x40, 0xef, 0x61, 0xf9, 0x6c, 0x50, 0xe3,
	0x3f, 0xa2, 0x6b, 0x80, 0x52, 0x68, 0x7c, 0xff, 0x23, 0x79, 0xc1, 0xa7, 0xe9, 0xf9, 0xd7, 0xf4,
	0xfc, 0xd1, 0x4d, 0xcf, 0x82, 0x87, 0xeb, 0xd7, 0x2b, 0xd5, 0xda, 0xb7, 0x7d, 0xcd, 0x1b, 0xd4,
	0xf9, 0x21, 0x9a, 0x9b, 0xa1, 0x71, 0x1f, 0x59, 0x1f, 0xfb, 0xc4, 0xed, 0x67, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xfe, 0xea, 0x9f, 0xc7, 0xda, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CTFClient is the client API for CTF service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CTFClient interface {
	GetRingFlags(ctx context.Context, in *Ring, opts ...grpc.CallOption) (*Flags, error)
	CreateFlag(ctx context.Context, in *Flag, opts ...grpc.CallOption) (*Flag, error)
	PromoteFlag(ctx context.Context, in *Flag, opts ...grpc.CallOption) (*Flag, error)
	RemoveFlag(ctx context.Context, in *Flag, opts ...grpc.CallOption) (*empty.Empty, error)
}

type cTFClient struct {
	cc grpc.ClientConnInterface
}

func NewCTFClient(cc grpc.ClientConnInterface) CTFClient {
	return &cTFClient{cc}
}

func (c *cTFClient) GetRingFlags(ctx context.Context, in *Ring, opts ...grpc.CallOption) (*Flags, error) {
	out := new(Flags)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/GetRingFlags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) CreateFlag(ctx context.Context, in *Flag, opts ...grpc.CallOption) (*Flag, error) {
	out := new(Flag)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/CreateFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) PromoteFlag(ctx context.Context, in *Flag, opts ...grpc.CallOption) (*Flag, error) {
	out := new(Flag)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/PromoteFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) RemoveFlag(ctx context.Context, in *Flag, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/RemoveFlag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CTFServer is the server API for CTF service.
type CTFServer interface {
	GetRingFlags(context.Context, *Ring) (*Flags, error)
	CreateFlag(context.Context, *Flag) (*Flag, error)
	PromoteFlag(context.Context, *Flag) (*Flag, error)
	RemoveFlag(context.Context, *Flag) (*empty.Empty, error)
}

// UnimplementedCTFServer can be embedded to have forward compatible implementations.
type UnimplementedCTFServer struct {
}

func (*UnimplementedCTFServer) GetRingFlags(ctx context.Context, req *Ring) (*Flags, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRingFlags not implemented")
}
func (*UnimplementedCTFServer) CreateFlag(ctx context.Context, req *Flag) (*Flag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFlag not implemented")
}
func (*UnimplementedCTFServer) PromoteFlag(ctx context.Context, req *Flag) (*Flag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PromoteFlag not implemented")
}
func (*UnimplementedCTFServer) RemoveFlag(ctx context.Context, req *Flag) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFlag not implemented")
}

func RegisterCTFServer(s *grpc.Server, srv CTFServer) {
	s.RegisterService(&_CTF_serviceDesc, srv)
}

func _CTF_GetRingFlags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ring)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).GetRingFlags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/GetRingFlags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).GetRingFlags(ctx, req.(*Ring))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_CreateFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Flag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).CreateFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/CreateFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).CreateFlag(ctx, req.(*Flag))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_PromoteFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Flag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).PromoteFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/PromoteFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).PromoteFlag(ctx, req.(*Flag))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_RemoveFlag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Flag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).RemoveFlag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/RemoveFlag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).RemoveFlag(ctx, req.(*Flag))
	}
	return interceptor(ctx, in, info, handler)
}

var _CTF_serviceDesc = grpc.ServiceDesc{
	ServiceName: "roleypoly.ctf.CTF",
	HandlerType: (*CTFServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRingFlags",
			Handler:    _CTF_GetRingFlags_Handler,
		},
		{
			MethodName: "CreateFlag",
			Handler:    _CTF_CreateFlag_Handler,
		},
		{
			MethodName: "PromoteFlag",
			Handler:    _CTF_PromoteFlag_Handler,
		},
		{
			MethodName: "RemoveFlag",
			Handler:    _CTF_RemoveFlag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ctf/ctf.proto",
}
