// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: discord/discord.proto

package discord

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	shared "github.com/roleypoly/rpc/shared"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TxDelta_Action int32

const (
	TxDelta_UNKNOWN TxDelta_Action = 0
	TxDelta_ADD     TxDelta_Action = 1
	TxDelta_REMOVE  TxDelta_Action = 2
)

// Enum value maps for TxDelta_Action.
var (
	TxDelta_Action_name = map[int32]string{
		0: "UNKNOWN",
		1: "ADD",
		2: "REMOVE",
	}
	TxDelta_Action_value = map[string]int32{
		"UNKNOWN": 0,
		"ADD":     1,
		"REMOVE":  2,
	}
)

func (x TxDelta_Action) Enum() *TxDelta_Action {
	p := new(TxDelta_Action)
	*p = x
	return p
}

func (x TxDelta_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxDelta_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_discord_discord_proto_enumTypes[0].Descriptor()
}

func (TxDelta_Action) Type() protoreflect.EnumType {
	return &file_discord_discord_proto_enumTypes[0]
}

func (x TxDelta_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxDelta_Action.Descriptor instead.
func (TxDelta_Action) EnumDescriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{3, 0}
}

type RoleTransactionResult_Status int32

const (
	RoleTransactionResult_DONE   RoleTransactionResult_Status = 0
	RoleTransactionResult_QUEUED RoleTransactionResult_Status = 1
	RoleTransactionResult_FAILED RoleTransactionResult_Status = 2
)

// Enum value maps for RoleTransactionResult_Status.
var (
	RoleTransactionResult_Status_name = map[int32]string{
		0: "DONE",
		1: "QUEUED",
		2: "FAILED",
	}
	RoleTransactionResult_Status_value = map[string]int32{
		"DONE":   0,
		"QUEUED": 1,
		"FAILED": 2,
	}
)

func (x RoleTransactionResult_Status) Enum() *RoleTransactionResult_Status {
	p := new(RoleTransactionResult_Status)
	*p = x
	return p
}

func (x RoleTransactionResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleTransactionResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_discord_discord_proto_enumTypes[1].Descriptor()
}

func (RoleTransactionResult_Status) Type() protoreflect.EnumType {
	return &file_discord_discord_proto_enumTypes[1]
}

func (x RoleTransactionResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleTransactionResult_Status.Descriptor instead.
func (RoleTransactionResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{4, 0}
}

type GuildMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Members []*Member `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GuildMembers) Reset() {
	*x = GuildMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_discord_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembers) ProtoMessage() {}

func (x *GuildMembers) ProtoReflect() protoreflect.Message {
	mi := &file_discord_discord_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembers.ProtoReflect.Descriptor instead.
func (*GuildMembers) Descriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{0}
}

func (x *GuildMembers) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GuildMembers) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildID string              `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Roles   []string            `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Nick    string              `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	User    *shared.DiscordUser `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_discord_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_discord_discord_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{1}
}

func (x *Member) GetGuildID() string {
	if x != nil {
		return x.GuildID
	}
	return ""
}

func (x *Member) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Member) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Member) GetUser() *shared.DiscordUser {
	if x != nil {
		return x.User
	}
	return nil
}

type RoleTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *shared.IDQuery `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Delta  []*TxDelta      `protobuf:"bytes,2,rep,name=delta,proto3" json:"delta,omitempty"`
}

func (x *RoleTransaction) Reset() {
	*x = RoleTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_discord_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleTransaction) ProtoMessage() {}

func (x *RoleTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_discord_discord_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleTransaction.ProtoReflect.Descriptor instead.
func (*RoleTransaction) Descriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{2}
}

func (x *RoleTransaction) GetMember() *shared.IDQuery {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *RoleTransaction) GetDelta() []*TxDelta {
	if x != nil {
		return x.Delta
	}
	return nil
}

type TxDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   string         `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Action TxDelta_Action `protobuf:"varint,2,opt,name=action,proto3,enum=roleypoly.discord.TxDelta_Action" json:"action,omitempty"`
}

func (x *TxDelta) Reset() {
	*x = TxDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_discord_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDelta) ProtoMessage() {}

func (x *TxDelta) ProtoReflect() protoreflect.Message {
	mi := &file_discord_discord_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDelta.ProtoReflect.Descriptor instead.
func (*TxDelta) Descriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{3}
}

func (x *TxDelta) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *TxDelta) GetAction() TxDelta_Action {
	if x != nil {
		return x.Action
	}
	return TxDelta_UNKNOWN
}

type RoleTransactionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member                      `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Status RoleTransactionResult_Status `protobuf:"varint,2,opt,name=status,proto3,enum=roleypoly.discord.RoleTransactionResult_Status" json:"status,omitempty"`
}

func (x *RoleTransactionResult) Reset() {
	*x = RoleTransactionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_discord_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleTransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleTransactionResult) ProtoMessage() {}

func (x *RoleTransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_discord_discord_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleTransactionResult.ProtoReflect.Descriptor instead.
func (*RoleTransactionResult) Descriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{4}
}

func (x *RoleTransactionResult) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *RoleTransactionResult) GetStatus() RoleTransactionResult_Status {
	if x != nil {
		return x.Status
	}
	return RoleTransactionResult_DONE
}

type ShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shards  int32 `protobuf:"varint,1,opt,name=shards,proto3" json:"shards,omitempty"`
	Servers int32 `protobuf:"varint,2,opt,name=servers,proto3" json:"servers,omitempty"`
	Users   int32 `protobuf:"varint,3,opt,name=users,proto3" json:"users,omitempty"`
	Roles   int32 `protobuf:"varint,4,opt,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discord_discord_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_discord_discord_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_discord_discord_proto_rawDescGZIP(), []int{5}
}

func (x *ShardInfo) GetShards() int32 {
	if x != nil {
		return x.Shards
	}
	return 0
}

func (x *ShardInfo) GetServers() int32 {
	if x != nil {
		return x.Servers
	}
	return 0
}

func (x *ShardInfo) GetUsers() int32 {
	if x != nil {
		return x.Users
	}
	return 0
}

func (x *ShardInfo) GetRoles() int32 {
	if x != nil {
		return x.Roles
	}
	return 0
}

var File_discord_discord_proto protoreflect.FileDescriptor

var file_discord_discord_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f,
	0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0c,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x78, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12,
	0x2a, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x0f, 0x52,
	0x6f, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x49, 0x44, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x54, 0x78,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a,
	0x07, 0x54, 0x78, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72,
	0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x54, 0x78, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x10, 0x02, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2f, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x69, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x32, 0xdb, 0x04, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3c, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x14, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f,
	0x6c, 0x79, 0x2e, 0x49, 0x44, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x12, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x49, 0x44, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x12, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x49, 0x44,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c,
	0x79, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x49, 0x44, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x19,
	0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f,
	0x6c, 0x79, 0x2e, 0x49, 0x44, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a,
	0x19, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c,
	0x79, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x42, 0x22,
	0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discord_discord_proto_rawDescOnce sync.Once
	file_discord_discord_proto_rawDescData = file_discord_discord_proto_rawDesc
)

func file_discord_discord_proto_rawDescGZIP() []byte {
	file_discord_discord_proto_rawDescOnce.Do(func() {
		file_discord_discord_proto_rawDescData = protoimpl.X.CompressGZIP(file_discord_discord_proto_rawDescData)
	})
	return file_discord_discord_proto_rawDescData
}

var file_discord_discord_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_discord_discord_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_discord_discord_proto_goTypes = []interface{}{
	(TxDelta_Action)(0),               // 0: roleypoly.discord.TxDelta.Action
	(RoleTransactionResult_Status)(0), // 1: roleypoly.discord.RoleTransactionResult.Status
	(*GuildMembers)(nil),              // 2: roleypoly.discord.GuildMembers
	(*Member)(nil),                    // 3: roleypoly.discord.Member
	(*RoleTransaction)(nil),           // 4: roleypoly.discord.RoleTransaction
	(*TxDelta)(nil),                   // 5: roleypoly.discord.TxDelta
	(*RoleTransactionResult)(nil),     // 6: roleypoly.discord.RoleTransactionResult
	(*ShardInfo)(nil),                 // 7: roleypoly.discord.ShardInfo
	(*shared.DiscordUser)(nil),        // 8: roleypoly.DiscordUser
	(*shared.IDQuery)(nil),            // 9: roleypoly.IDQuery
	(*empty.Empty)(nil),               // 10: google.protobuf.Empty
	(*shared.GuildList)(nil),          // 11: roleypoly.GuildList
	(*shared.Guild)(nil),              // 12: roleypoly.Guild
	(*shared.GuildRoles)(nil),         // 13: roleypoly.GuildRoles
}
var file_discord_discord_proto_depIdxs = []int32{
	3,  // 0: roleypoly.discord.GuildMembers.members:type_name -> roleypoly.discord.Member
	8,  // 1: roleypoly.discord.Member.user:type_name -> roleypoly.DiscordUser
	9,  // 2: roleypoly.discord.RoleTransaction.member:type_name -> roleypoly.IDQuery
	5,  // 3: roleypoly.discord.RoleTransaction.delta:type_name -> roleypoly.discord.TxDelta
	0,  // 4: roleypoly.discord.TxDelta.action:type_name -> roleypoly.discord.TxDelta.Action
	3,  // 5: roleypoly.discord.RoleTransactionResult.member:type_name -> roleypoly.discord.Member
	1,  // 6: roleypoly.discord.RoleTransactionResult.status:type_name -> roleypoly.discord.RoleTransactionResult.Status
	10, // 7: roleypoly.discord.Discord.ListGuilds:input_type -> google.protobuf.Empty
	9,  // 8: roleypoly.discord.Discord.GetGuild:input_type -> roleypoly.IDQuery
	9,  // 9: roleypoly.discord.Discord.GetGuildRoles:input_type -> roleypoly.IDQuery
	9,  // 10: roleypoly.discord.Discord.GetGuildsByMember:input_type -> roleypoly.IDQuery
	9,  // 11: roleypoly.discord.Discord.GetMember:input_type -> roleypoly.IDQuery
	9,  // 12: roleypoly.discord.Discord.GetUser:input_type -> roleypoly.IDQuery
	3,  // 13: roleypoly.discord.Discord.UpdateMember:input_type -> roleypoly.discord.Member
	4,  // 14: roleypoly.discord.Discord.UpdateMemberRoles:input_type -> roleypoly.discord.RoleTransaction
	10, // 15: roleypoly.discord.Discord.OwnUser:input_type -> google.protobuf.Empty
	11, // 16: roleypoly.discord.Discord.ListGuilds:output_type -> roleypoly.GuildList
	12, // 17: roleypoly.discord.Discord.GetGuild:output_type -> roleypoly.Guild
	13, // 18: roleypoly.discord.Discord.GetGuildRoles:output_type -> roleypoly.GuildRoles
	11, // 19: roleypoly.discord.Discord.GetGuildsByMember:output_type -> roleypoly.GuildList
	3,  // 20: roleypoly.discord.Discord.GetMember:output_type -> roleypoly.discord.Member
	8,  // 21: roleypoly.discord.Discord.GetUser:output_type -> roleypoly.DiscordUser
	3,  // 22: roleypoly.discord.Discord.UpdateMember:output_type -> roleypoly.discord.Member
	6,  // 23: roleypoly.discord.Discord.UpdateMemberRoles:output_type -> roleypoly.discord.RoleTransactionResult
	8,  // 24: roleypoly.discord.Discord.OwnUser:output_type -> roleypoly.DiscordUser
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_discord_discord_proto_init() }
func file_discord_discord_proto_init() {
	if File_discord_discord_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discord_discord_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_discord_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_discord_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_discord_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_discord_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleTransactionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discord_discord_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discord_discord_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discord_discord_proto_goTypes,
		DependencyIndexes: file_discord_discord_proto_depIdxs,
		EnumInfos:         file_discord_discord_proto_enumTypes,
		MessageInfos:      file_discord_discord_proto_msgTypes,
	}.Build()
	File_discord_discord_proto = out.File
	file_discord_discord_proto_rawDesc = nil
	file_discord_discord_proto_goTypes = nil
	file_discord_discord_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DiscordClient is the client API for Discord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscordClient interface {
	ListGuilds(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*shared.GuildList, error)
	GetGuild(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.Guild, error)
	GetGuildRoles(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.GuildRoles, error)
	GetGuildsByMember(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.GuildList, error)
	GetMember(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*Member, error)
	GetUser(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.DiscordUser, error)
	UpdateMember(ctx context.Context, in *Member, opts ...grpc.CallOption) (*Member, error)
	UpdateMemberRoles(ctx context.Context, in *RoleTransaction, opts ...grpc.CallOption) (*RoleTransactionResult, error)
	OwnUser(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*shared.DiscordUser, error)
}

type discordClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscordClient(cc grpc.ClientConnInterface) DiscordClient {
	return &discordClient{cc}
}

func (c *discordClient) ListGuilds(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*shared.GuildList, error) {
	out := new(shared.GuildList)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/ListGuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) GetGuild(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.Guild, error) {
	out := new(shared.Guild)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/GetGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) GetGuildRoles(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.GuildRoles, error) {
	out := new(shared.GuildRoles)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/GetGuildRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) GetGuildsByMember(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.GuildList, error) {
	out := new(shared.GuildList)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/GetGuildsByMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) GetMember(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*Member, error) {
	out := new(Member)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/GetMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) GetUser(ctx context.Context, in *shared.IDQuery, opts ...grpc.CallOption) (*shared.DiscordUser, error) {
	out := new(shared.DiscordUser)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) UpdateMember(ctx context.Context, in *Member, opts ...grpc.CallOption) (*Member, error) {
	out := new(Member)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/UpdateMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) UpdateMemberRoles(ctx context.Context, in *RoleTransaction, opts ...grpc.CallOption) (*RoleTransactionResult, error) {
	out := new(RoleTransactionResult)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/UpdateMemberRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordClient) OwnUser(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*shared.DiscordUser, error) {
	out := new(shared.DiscordUser)
	err := c.cc.Invoke(ctx, "/roleypoly.discord.Discord/OwnUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscordServer is the server API for Discord service.
type DiscordServer interface {
	ListGuilds(context.Context, *empty.Empty) (*shared.GuildList, error)
	GetGuild(context.Context, *shared.IDQuery) (*shared.Guild, error)
	GetGuildRoles(context.Context, *shared.IDQuery) (*shared.GuildRoles, error)
	GetGuildsByMember(context.Context, *shared.IDQuery) (*shared.GuildList, error)
	GetMember(context.Context, *shared.IDQuery) (*Member, error)
	GetUser(context.Context, *shared.IDQuery) (*shared.DiscordUser, error)
	UpdateMember(context.Context, *Member) (*Member, error)
	UpdateMemberRoles(context.Context, *RoleTransaction) (*RoleTransactionResult, error)
	OwnUser(context.Context, *empty.Empty) (*shared.DiscordUser, error)
}

// UnimplementedDiscordServer can be embedded to have forward compatible implementations.
type UnimplementedDiscordServer struct {
}

func (*UnimplementedDiscordServer) ListGuilds(context.Context, *empty.Empty) (*shared.GuildList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGuilds not implemented")
}
func (*UnimplementedDiscordServer) GetGuild(context.Context, *shared.IDQuery) (*shared.Guild, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGuild not implemented")
}
func (*UnimplementedDiscordServer) GetGuildRoles(context.Context, *shared.IDQuery) (*shared.GuildRoles, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGuildRoles not implemented")
}
func (*UnimplementedDiscordServer) GetGuildsByMember(context.Context, *shared.IDQuery) (*shared.GuildList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGuildsByMember not implemented")
}
func (*UnimplementedDiscordServer) GetMember(context.Context, *shared.IDQuery) (*Member, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMember not implemented")
}
func (*UnimplementedDiscordServer) GetUser(context.Context, *shared.IDQuery) (*shared.DiscordUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedDiscordServer) UpdateMember(context.Context, *Member) (*Member, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMember not implemented")
}
func (*UnimplementedDiscordServer) UpdateMemberRoles(context.Context, *RoleTransaction) (*RoleTransactionResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMemberRoles not implemented")
}
func (*UnimplementedDiscordServer) OwnUser(context.Context, *empty.Empty) (*shared.DiscordUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OwnUser not implemented")
}

func RegisterDiscordServer(s *grpc.Server, srv DiscordServer) {
	s.RegisterService(&_Discord_serviceDesc, srv)
}

func _Discord_ListGuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).ListGuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/ListGuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).ListGuilds(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_GetGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.IDQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).GetGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/GetGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).GetGuild(ctx, req.(*shared.IDQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_GetGuildRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.IDQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).GetGuildRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/GetGuildRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).GetGuildRoles(ctx, req.(*shared.IDQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_GetGuildsByMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.IDQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).GetGuildsByMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/GetGuildsByMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).GetGuildsByMember(ctx, req.(*shared.IDQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_GetMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.IDQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).GetMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/GetMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).GetMember(ctx, req.(*shared.IDQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.IDQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).GetUser(ctx, req.(*shared.IDQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_UpdateMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Member)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).UpdateMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/UpdateMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).UpdateMember(ctx, req.(*Member))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_UpdateMemberRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).UpdateMemberRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/UpdateMemberRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).UpdateMemberRoles(ctx, req.(*RoleTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Discord_OwnUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).OwnUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.discord.Discord/OwnUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).OwnUser(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "roleypoly.discord.Discord",
	HandlerType: (*DiscordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGuilds",
			Handler:    _Discord_ListGuilds_Handler,
		},
		{
			MethodName: "GetGuild",
			Handler:    _Discord_GetGuild_Handler,
		},
		{
			MethodName: "GetGuildRoles",
			Handler:    _Discord_GetGuildRoles_Handler,
		},
		{
			MethodName: "GetGuildsByMember",
			Handler:    _Discord_GetGuildsByMember_Handler,
		},
		{
			MethodName: "GetMember",
			Handler:    _Discord_GetMember_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Discord_GetUser_Handler,
		},
		{
			MethodName: "UpdateMember",
			Handler:    _Discord_UpdateMember_Handler,
		},
		{
			MethodName: "UpdateMemberRoles",
			Handler:    _Discord_UpdateMemberRoles_Handler,
		},
		{
			MethodName: "OwnUser",
			Handler:    _Discord_OwnUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discord/discord.proto",
}
