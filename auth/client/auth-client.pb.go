// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.2
// source: auth/client/auth-client.proto

package client

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	auth "github.com/roleypoly/rpc/auth"
	shared "github.com/roleypoly/rpc/shared"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_auth_client_auth_client_proto protoreflect.FileDescriptor

var file_auth_client_auth_client_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x15, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x15, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xab, 0x02,
	0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f,
	0x6c, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x72, 0x6f, 0x6c, 0x65,
	0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x15, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70, 0x6f, 0x6c, 0x79, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x79, 0x70,
	0x6f, 0x6c, 0x79, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_auth_client_auth_client_proto_goTypes = []interface{}{
	(*empty.Empty)(nil),             // 0: google.protobuf.Empty
	(*auth.Token)(nil),              // 1: roleypoly.auth.Token
	(*auth.AuthChallenge)(nil),      // 2: roleypoly.auth.AuthChallenge
	(*shared.RoleypolySession)(nil), // 3: roleypoly.RoleypolySession
}
var file_auth_client_auth_client_proto_depIdxs = []int32{
	0, // 0: roleypoly.auth.client.AuthClient.GetClientToken:input_type -> google.protobuf.Empty
	0, // 1: roleypoly.auth.client.AuthClient.GetUserSession:input_type -> google.protobuf.Empty
	1, // 2: roleypoly.auth.client.AuthClient.ResolveSessionKey:input_type -> roleypoly.auth.Token
	2, // 3: roleypoly.auth.client.AuthClient.AuthorizeChallenge:input_type -> roleypoly.auth.AuthChallenge
	1, // 4: roleypoly.auth.client.AuthClient.GetClientToken:output_type -> roleypoly.auth.Token
	3, // 5: roleypoly.auth.client.AuthClient.GetUserSession:output_type -> roleypoly.RoleypolySession
	1, // 6: roleypoly.auth.client.AuthClient.ResolveSessionKey:output_type -> roleypoly.auth.Token
	1, // 7: roleypoly.auth.client.AuthClient.AuthorizeChallenge:output_type -> roleypoly.auth.Token
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_auth_client_auth_client_proto_init() }
func file_auth_client_auth_client_proto_init() {
	if File_auth_client_auth_client_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_client_auth_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_client_auth_client_proto_goTypes,
		DependencyIndexes: file_auth_client_auth_client_proto_depIdxs,
	}.Build()
	File_auth_client_auth_client_proto = out.File
	file_auth_client_auth_client_proto_rawDesc = nil
	file_auth_client_auth_client_proto_goTypes = nil
	file_auth_client_auth_client_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthClientClient is the client API for AuthClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClientClient interface {
	GetClientToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*auth.Token, error)
	GetUserSession(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*shared.RoleypolySession, error)
	ResolveSessionKey(ctx context.Context, in *auth.Token, opts ...grpc.CallOption) (*auth.Token, error)
	AuthorizeChallenge(ctx context.Context, in *auth.AuthChallenge, opts ...grpc.CallOption) (*auth.Token, error)
}

type authClientClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthClientClient(cc grpc.ClientConnInterface) AuthClientClient {
	return &authClientClient{cc}
}

func (c *authClientClient) GetClientToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*auth.Token, error) {
	out := new(auth.Token)
	err := c.cc.Invoke(ctx, "/roleypoly.auth.client.AuthClient/GetClientToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClientClient) GetUserSession(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*shared.RoleypolySession, error) {
	out := new(shared.RoleypolySession)
	err := c.cc.Invoke(ctx, "/roleypoly.auth.client.AuthClient/GetUserSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClientClient) ResolveSessionKey(ctx context.Context, in *auth.Token, opts ...grpc.CallOption) (*auth.Token, error) {
	out := new(auth.Token)
	err := c.cc.Invoke(ctx, "/roleypoly.auth.client.AuthClient/ResolveSessionKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClientClient) AuthorizeChallenge(ctx context.Context, in *auth.AuthChallenge, opts ...grpc.CallOption) (*auth.Token, error) {
	out := new(auth.Token)
	err := c.cc.Invoke(ctx, "/roleypoly.auth.client.AuthClient/AuthorizeChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthClientServer is the server API for AuthClient service.
type AuthClientServer interface {
	GetClientToken(context.Context, *empty.Empty) (*auth.Token, error)
	GetUserSession(context.Context, *empty.Empty) (*shared.RoleypolySession, error)
	ResolveSessionKey(context.Context, *auth.Token) (*auth.Token, error)
	AuthorizeChallenge(context.Context, *auth.AuthChallenge) (*auth.Token, error)
}

// UnimplementedAuthClientServer can be embedded to have forward compatible implementations.
type UnimplementedAuthClientServer struct {
}

func (*UnimplementedAuthClientServer) GetClientToken(context.Context, *empty.Empty) (*auth.Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientToken not implemented")
}
func (*UnimplementedAuthClientServer) GetUserSession(context.Context, *empty.Empty) (*shared.RoleypolySession, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSession not implemented")
}
func (*UnimplementedAuthClientServer) ResolveSessionKey(context.Context, *auth.Token) (*auth.Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveSessionKey not implemented")
}
func (*UnimplementedAuthClientServer) AuthorizeChallenge(context.Context, *auth.AuthChallenge) (*auth.Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthorizeChallenge not implemented")
}

func RegisterAuthClientServer(s *grpc.Server, srv AuthClientServer) {
	s.RegisterService(&_AuthClient_serviceDesc, srv)
}

func _AuthClient_GetClientToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthClientServer).GetClientToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.auth.client.AuthClient/GetClientToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthClientServer).GetClientToken(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthClient_GetUserSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthClientServer).GetUserSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.auth.client.AuthClient/GetUserSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthClientServer).GetUserSession(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthClient_ResolveSessionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(auth.Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthClientServer).ResolveSessionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.auth.client.AuthClient/ResolveSessionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthClientServer).ResolveSessionKey(ctx, req.(*auth.Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthClient_AuthorizeChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(auth.AuthChallenge)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthClientServer).AuthorizeChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.auth.client.AuthClient/AuthorizeChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthClientServer).AuthorizeChallenge(ctx, req.(*auth.AuthChallenge))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "roleypoly.auth.client.AuthClient",
	HandlerType: (*AuthClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClientToken",
			Handler:    _AuthClient_GetClientToken_Handler,
		},
		{
			MethodName: "GetUserSession",
			Handler:    _AuthClient_GetUserSession_Handler,
		},
		{
			MethodName: "ResolveSessionKey",
			Handler:    _AuthClient_ResolveSessionKey_Handler,
		},
		{
			MethodName: "AuthorizeChallenge",
			Handler:    _AuthClient_AuthorizeChallenge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth/client/auth-client.proto",
}
