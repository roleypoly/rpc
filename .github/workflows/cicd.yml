name: RPC CI/CD

on: push

jobs:
  validate:
    name: Validate & Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Ensure Go
        uses: actions/setup-go@master
        with:
          go-version: 1.13.x

      - name: Ensure Node
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      - name: Ensure protoc
        uses: roleypoly/actions/setup-protoc@master
        with:
          protoc-version: "3.9.1"

      - uses: actions/checkout@v1

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
          
      - uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Fetch Dependencies & Generate
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get github.com/golang/protobuf/protoc-gen-go
          npm ci
          go generate

      - name: Smoketest
        run : |
          go vet ./...
          node hack/smoketest.js

      - name: Check if dirty
        run: test -z "`git status -s`" || (git status && exit 1)

      - name: Release
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run semantic-release



